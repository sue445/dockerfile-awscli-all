version: 2.1

orbs:
  slack: circleci/slack@volatile

commands:
  build_with_cache:
    parameters:
      image_name:
        type: string

      cache_key_prefix:
        type: string
        default: "v1"

    steps:
      - restore_cache:
          keys:
            - << parameters.cache_key_prefix >>-{{ .Branch }}-
            - << parameters.cache_key_prefix >>-
          paths:
            - /caches/image.tar
      - run:
          name: Load Docker image layer cache
          command: |
            set +o pipefail
            docker load -i /caches/image.tar | true
      - run:
          name: Build Docker image
          command: |
            docker build --cache-from=image -t << parameters.image_name >> .
      - run:
          name: Save Docker image layer cache
          command: |
            mkdir -p /caches
            docker save -o /caches/image.tar << parameters.image_name >>
      - save_cache:
          key: << parameters.cache_key_prefix >>-{{ .Branch }}-{{ epoch }}
          paths:
            - /caches/image.tar
      - run:
          name: Show docker image size
          command: |
            docker images
            ls -l /caches/image.tar

jobs:
  build:
    working_directory: /app
    docker:
      - image: docker:stable-git
    steps:
      - checkout
      - setup_remote_docker
      - run: apk --update --no-cache add bash curl jq
      - build_with_cache:
          image_name:       awscli-all
          cache_key_prefix: v1
      - run:
          name: Run tests
          command: |
            docker run -it --rm awscli-all bash -c "aws --version"
            docker run -it --rm awscli-all bash -c "sam --version"
            docker run -it --rm awscli-all bash -c "ecs-cli --version"

      - slack/notify:
          event: fail
          template: basic_fail_1

  update_version:
    docker:
      - image: python:3.7
    steps:
      - checkout

      - run:
          name: Install package
          command: |
            apt-get update
            apt-get install git jq -y

      - run:
          name: Setup git
          command: |
            git config push.default current
            git config user.name "CircleCI"
            git config user.email ${EMAIL}

      - run:
          name: Update VERSION
          command: |
            set -x
            # c.f. https://github.com/stedolan/jq/issues/708#issuecomment-75394871
            VERSION=$(curl -s https://pypi.org/pypi/awscli/json | jq --raw-output '.releases | keys | sort_by(. | split(".") | map(tonumber)) | .[-1:][0]')

            if [ -z "$VERSION" ]; then
              echo '$VERSION is empty!'
              exit 1
            fi

            sed -i -e "s/ENV AWSCLI_VERSION .*$/ENV AWSCLI_VERSION ${VERSION}/g" Dockerfile
            git add Dockerfile

            set +o pipefail
            git commit -m "Bump version ${VERSION} from CircleCI" | true
            git tag -a ${VERSION} -m "Release ${VERSION}" | true
            set -o pipefail
            git push origin --tags -f
            git push origin

      - slack/notify:
          event: fail
          template: basic_fail_1

workflows:
  version: 2

  build:
    jobs:
      - build

  daily_update:
    triggers:
      - schedule:
          cron: "0 21 * * *" # JST 6:00
          filters:
            branches:
              only: master
    jobs:
      - update_version

  manual_update:
    jobs:
      - hold:
          type: approval
      - update_version:
          requires:
            - hold
